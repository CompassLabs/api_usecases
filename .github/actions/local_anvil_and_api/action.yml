name: "Start Anvil forks, fund wallet, and launch API"
description: "Starts Ethereum, Arbitrum, and Base Anvil forks, funds a wallet, clones mono repo, and runs the API."

inputs:
  ethereum_rpc_url:
    description: "Ethereum Mainnet RPC URL"
    required: true
  arbitrum_rpc_url:
    description: "Arbitrum Mainnet RPC URL"
    required: true
  base_rpc_url:
    description: "Base Mainnet RPC URL"
    required: true
  private_key:
    description: "Private key of the wallet to fund"
    required: true
  fund_amount_eth:
    description: "ETH amount to fund the wallet with"
    default: "10"
  environment:
    description: "Environment to run the workflow in"
    required: true
  ecr_image_uri:
    description: "ECR image URI for the API container"
    required: true
  aws_ecr_sts_role:
    description: "AWS ECR STS role"
    required: true
  mono_app_id:
    description: "Mono repository app ID"
    required: false
  mono_app_private_key:
    description: "Mono repository app private key"
    required: false

outputs:
  ethereum_local_url:
    description: "Localhost RPC URL for Ethereum Anvil instance"
  arbitrum_local_url:
    description: "Localhost RPC URL for Arbitrum Anvil instance"
  base_local_url:
    description: "Localhost RPC URL for Base Anvil instance"

runs:
  using: "composite"
  steps:
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        cache: false

    - name: Start Anvil Fork Ethereum
      shell: bash
      run: |
        anvil \
        --block-time 0.05 \
        --hardfork prague \
        --host 0.0.0.0 \
        --fork-url "${{ inputs.ethereum_rpc_url }}" \
        --port 8545 \
        --chain-id 1 \
        --no-rate-limit &
        echo "ethereum_local_url=http://localhost:8545" >> $GITHUB_OUTPUT

    - name: Start Anvil Fork Arbitrum
      shell: bash
      run: |
        anvil \
        --block-time 0.05 \
        --hardfork prague \
        --host 0.0.0.0 \
        --fork-url "${{ inputs.arbitrum_rpc_url }}" \
        --port 8547 \
        --chain-id 42161 \
        --no-rate-limit &
        echo "arbitrum_local_url=http://localhost:8547" >> $GITHUB_OUTPUT

    - name: Start Anvil Fork Base
      shell: bash
      run: |
        anvil \
        --block-time 0.05 \
        --hardfork prague \
        --host 0.0.0.0 \
        --fork-url "${{ inputs.base_rpc_url }}" \
        --port 8546 \
        --chain-id 8453 \
        --no-rate-limit &
        sleep 5
        echo "base_local_url=http://localhost:8546" >> $GITHUB_OUTPUT

    - name: Fund Wallet
      shell: bash
      run: |
        WALLET_ADDRESS=$(cast wallet address --private-key "${{ inputs.private_key }}")
        echo "Funding wallet: $WALLET_ADDRESS"
        WEI_AMOUNT=$(cast to-wei "${{ inputs.fund_amount_eth }}" ether)
        cast rpc anvil_setBalance $WALLET_ADDRESS $WEI_AMOUNT --rpc-url http://localhost:8545
        cast rpc anvil_setBalance $WALLET_ADDRESS $WEI_AMOUNT --rpc-url http://localhost:8546
        cast rpc anvil_setBalance $WALLET_ADDRESS $WEI_AMOUNT --rpc-url http://localhost:8547 

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
      with:
        role-to-assume: ${{ inputs.aws_ecr_sts_role }}
        role-session-name: github-actions
        aws-region: eu-west-2

    - name: Authenticate with ECR
      shell: bash
      run: aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 688567264391.dkr.ecr.eu-west-2.amazonaws.com

    - name: Start API Container
      shell: bash
      run: |
        if [[ "${{ inputs.environment }}" == "local" ]]; then
          tag="latest"
        else
          tag="${{ inputs.environment }}"
        fi

        docker run -d \
          --name compass-api \
          --network host \
          -e ETHEREUM_MAINNET_RPC_URL=http://localhost:8545 \
          -e ARBITRUM_MAINNET_RPC_URL=http://localhost:8547 \
          -e BASE_MAINNET_RPC_URL=http://localhost:8546 \
          -e PENDLE_API_URL=https://api-v2.pendle.finance \
          -e MORPHO_GRAPHQL_API_URL=https://blue-api.morpho.org/graphql \
          -e THE_GRAPH_URL_AAVE_ARBITRUM=https://gateway.thegraph.com/api/subgraphs/id/notvalid \
          -e THE_GRAPH_URL_AAVE_ETHEREUM=https://gateway.thegraph.com/api/subgraphs/id/notvalid \
          -e THE_GRAPH_URL_AAVE_BASE=https://gateway.thegraph.com/api/subgraphs/id/notvalid \
          -e THE_GRAPH_API_KEY=notvalid \
          -e ENV=development \
          ${{ inputs.ecr_image_uri }}:$tag
        
        echo "Waiting for API to be ready..."
        until curl -s http://localhost:8000/health >/dev/null; do 
          sleep 1
        done
        echo "API is running"
