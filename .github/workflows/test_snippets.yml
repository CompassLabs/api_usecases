name: workflow 1

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  discover:
    runs-on: ubuntu-latest

    env:
      COMPASS_API_KEY: ${{ secrets.COMPASS_API_KEY }}
      #PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      #ARBITRUM_RPC_URL: http://localhost:8547
      #SERVER_URL: http://localhost:80
      #NPM_PACKAGE_VERSION: ${{ needs.set-versions.outputs.npm_package_version }}
      UV_PACKAGE_VERSION: ${{ needs.set-versions.outputs.uv_package_version }}

    outputs:
      items: ${{ steps.collect.outputs.items }}   # <-- expose "items"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        working-directory: v1/test_sdk_snippets
        run: |
          if [[ "$UV_PACKAGE_VERSION" != "latest" ]]; then
            echo "Installing compass-api-sdk==$UV_PACKAGE_VERSION"
            uv add compass-api-sdk==$UV_PACKAGE_VERSION
          fi
          uv sync
          uv pip freeze

      - name: collect
        working-directory: v1/test_sdk_snippets
        run: ./.venv/bin/python discover_endpoints.py

#      - id: collect
#        run: python v1/test_sdk_snippets/discover_endpoints.py   # <-- run script
#      - run: echo "items = ${{ steps.collect.outputs.items }}"

  echo-item:
    needs: discover
    if: ${{ needs.discover.outputs.items != '' }}
    runs-on: ubuntu-latest

    env:
      COMPASS_API_KEY: ${{ secrets.COMPASS_API_KEY }}
      #PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      #ARBITRUM_RPC_URL: http://localhost:8547
      #SERVER_URL: http://localhost:80
      #NPM_PACKAGE_VERSION: ${{ needs.set-versions.outputs.npm_package_version }}
      UV_PACKAGE_VERSION: ${{ needs.set-versions.outputs.uv_package_version }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.items) }}
    steps:
      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        working-directory: v1/test_sdk_snippets
        run: |
          if [[ "$UV_PACKAGE_VERSION" != "latest" ]]; then
            echo "Installing compass-api-sdk==$UV_PACKAGE_VERSION"
            uv add compass-api-sdk==$UV_PACKAGE_VERSION
          fi
          uv sync
          uv pip freeze

      - name: collect
        working-directory: v1/test_sdk_snippets
        run: ./.venv/bin/python run_endpoint.py
        env:
          ENDPOINT: ${{ matrix.item }}
#      - run: python v1/test_sdk_snippets/run_endpoint.py
#        env:
#          ENDPOINT: ${{ matrix.item }}