"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useWallet.ts":
/*!********************************!*\
  !*** ./src/hooks/useWallet.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWallet: function() { return /* binding */ useWallet; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useWallet auto */ \nconst useWallet = ()=>{\n    const [walletState, setWalletState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        isConnected: false,\n        address: null,\n        isConnecting: false,\n        error: null\n    });\n    // Check if MetaMask is installed\n    const isMetaMaskInstalled = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        var _window_ethereum;\n        return  true && ((_window_ethereum = window.ethereum) === null || _window_ethereum === void 0 ? void 0 : _window_ethereum.isMetaMask);\n    }, []);\n    // Connect to MetaMask\n    const connectWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!isMetaMaskInstalled()) {\n            setWalletState((prev)=>({\n                    ...prev,\n                    error: \"MetaMask is not installed. Please install MetaMask to continue.\"\n                }));\n            return;\n        }\n        setWalletState((prev)=>({\n                ...prev,\n                isConnecting: true,\n                error: null\n            }));\n        try {\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            if (accounts.length > 0) {\n                setWalletState((prev)=>({\n                        ...prev,\n                        isConnected: true,\n                        address: accounts[0],\n                        isConnecting: false\n                    }));\n            } else {\n                setWalletState((prev)=>({\n                        ...prev,\n                        isConnecting: false,\n                        error: \"No accounts found. Please make sure your wallet is unlocked and has at least one account.\"\n                    }));\n            }\n        } catch (error) {\n            const metamaskError = error;\n            let errorMessage = \"Failed to connect to MetaMask\";\n            if (metamaskError.code === 4001) {\n                errorMessage = \"Connection rejected by user\";\n            } else if (metamaskError.code === -32002) {\n                errorMessage = \"Connection request already pending. Please check MetaMask.\";\n            } else if (metamaskError.message) {\n                errorMessage = metamaskError.message;\n            }\n            setWalletState((prev)=>({\n                    ...prev,\n                    isConnecting: false,\n                    error: errorMessage\n                }));\n        }\n    }, [\n        isMetaMaskInstalled\n    ]);\n    // Disconnect wallet\n    const disconnectWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setWalletState({\n            isConnected: false,\n            address: null,\n            isConnecting: false,\n            error: null\n        });\n    }, []);\n    // Check if already connected on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const checkConnection = async ()=>{\n            if (!isMetaMaskInstalled()) return;\n            try {\n                const accounts = await window.ethereum.request({\n                    method: \"eth_accounts\"\n                });\n                if (accounts.length > 0) {\n                    setWalletState((prev)=>({\n                            ...prev,\n                            isConnected: true,\n                            address: accounts[0]\n                        }));\n                }\n            } catch (error) {\n                console.error(\"Error checking wallet connection:\", error);\n            }\n        };\n        checkConnection();\n    }, [\n        isMetaMaskInstalled\n    ]);\n    // Listen for account changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!isMetaMaskInstalled()) return;\n        const handleAccountsChanged = (accounts)=>{\n            if (accounts.length === 0) {\n                disconnectWallet();\n            } else {\n                setWalletState((prev)=>({\n                        ...prev,\n                        isConnected: true,\n                        address: accounts[0],\n                        error: null\n                    }));\n            }\n        };\n        window.ethereum.on(\"accountsChanged\", handleAccountsChanged);\n        return ()=>{\n            window.ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n        };\n    }, [\n        isMetaMaskInstalled,\n        disconnectWallet\n    ]);\n    return {\n        ...walletState,\n        connectWallet,\n        disconnectWallet,\n        isMetaMaskInstalled: isMetaMaskInstalled()\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VXYWxsZXQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OytEQUV5RDtBQUdsRCxNQUFNRyxZQUFZO0lBQ3ZCLE1BQU0sQ0FBQ0MsYUFBYUMsZUFBZSxHQUFHTCwrQ0FBUUEsQ0FBYztRQUMxRE0sYUFBYTtRQUNiQyxTQUFTO1FBQ1RDLGNBQWM7UUFDZEMsT0FBTztJQUNUO0lBRUEsaUNBQWlDO0lBQ2pDLE1BQU1DLHNCQUFzQlIsa0RBQVdBLENBQUM7WUFDRVM7UUFBeEMsT0FBTyxLQUFrQixNQUFlQSxtQkFBQUEsT0FBT0MsUUFBUSxjQUFmRCx1Q0FBQUEsaUJBQWlCRSxVQUFVO0lBQ3JFLEdBQUcsRUFBRTtJQUVMLHNCQUFzQjtJQUN0QixNQUFNQyxnQkFBZ0JaLGtEQUFXQSxDQUFDO1FBQ2hDLElBQUksQ0FBQ1EsdUJBQXVCO1lBQzFCTCxlQUFlVSxDQUFBQSxPQUFTO29CQUN0QixHQUFHQSxJQUFJO29CQUNQTixPQUFPO2dCQUNUO1lBQ0E7UUFDRjtRQUVBSixlQUFlVSxDQUFBQSxPQUFTO2dCQUN0QixHQUFHQSxJQUFJO2dCQUNQUCxjQUFjO2dCQUNkQyxPQUFPO1lBQ1Q7UUFFQSxJQUFJO1lBQ0YsTUFBTU8sV0FBVyxNQUFNTCxPQUFPQyxRQUFRLENBQUVLLE9BQU8sQ0FBQztnQkFDOUNDLFFBQVE7WUFDVjtZQUVBLElBQUlGLFNBQVNHLE1BQU0sR0FBRyxHQUFHO2dCQUN2QmQsZUFBZVUsQ0FBQUEsT0FBUzt3QkFDdEIsR0FBR0EsSUFBSTt3QkFDUFQsYUFBYTt3QkFDYkMsU0FBU1MsUUFBUSxDQUFDLEVBQUU7d0JBQ3BCUixjQUFjO29CQUNoQjtZQUNGLE9BQU87Z0JBQ0xILGVBQWVVLENBQUFBLE9BQVM7d0JBQ3RCLEdBQUdBLElBQUk7d0JBQ1BQLGNBQWM7d0JBQ2RDLE9BQU87b0JBQ1Q7WUFDRjtRQUNGLEVBQUUsT0FBT0EsT0FBTztZQUNkLE1BQU1XLGdCQUFnQlg7WUFDdEIsSUFBSVksZUFBZTtZQUVuQixJQUFJRCxjQUFjRSxJQUFJLEtBQUssTUFBTTtnQkFDL0JELGVBQWU7WUFDakIsT0FBTyxJQUFJRCxjQUFjRSxJQUFJLEtBQUssQ0FBQyxPQUFPO2dCQUN4Q0QsZUFBZTtZQUNqQixPQUFPLElBQUlELGNBQWNHLE9BQU8sRUFBRTtnQkFDaENGLGVBQWVELGNBQWNHLE9BQU87WUFDdEM7WUFFQWxCLGVBQWVVLENBQUFBLE9BQVM7b0JBQ3RCLEdBQUdBLElBQUk7b0JBQ1BQLGNBQWM7b0JBQ2RDLE9BQU9ZO2dCQUNUO1FBQ0Y7SUFDRixHQUFHO1FBQUNYO0tBQW9CO0lBRXhCLG9CQUFvQjtJQUNwQixNQUFNYyxtQkFBbUJ0QixrREFBV0EsQ0FBQztRQUNuQ0csZUFBZTtZQUNiQyxhQUFhO1lBQ2JDLFNBQVM7WUFDVEMsY0FBYztZQUNkQyxPQUFPO1FBQ1Q7SUFDRixHQUFHLEVBQUU7SUFFTCxzQ0FBc0M7SUFDdENSLGdEQUFTQSxDQUFDO1FBQ1IsTUFBTXdCLGtCQUFrQjtZQUN0QixJQUFJLENBQUNmLHVCQUF1QjtZQUU1QixJQUFJO2dCQUNGLE1BQU1NLFdBQVcsTUFBTUwsT0FBT0MsUUFBUSxDQUFFSyxPQUFPLENBQUM7b0JBQzlDQyxRQUFRO2dCQUNWO2dCQUVBLElBQUlGLFNBQVNHLE1BQU0sR0FBRyxHQUFHO29CQUN2QmQsZUFBZVUsQ0FBQUEsT0FBUzs0QkFDdEIsR0FBR0EsSUFBSTs0QkFDUFQsYUFBYTs0QkFDYkMsU0FBU1MsUUFBUSxDQUFDLEVBQUU7d0JBQ3RCO2dCQUNGO1lBQ0YsRUFBRSxPQUFPUCxPQUFPO2dCQUNkaUIsUUFBUWpCLEtBQUssQ0FBQyxxQ0FBcUNBO1lBQ3JEO1FBQ0Y7UUFFQWdCO0lBQ0YsR0FBRztRQUFDZjtLQUFvQjtJQUV4Qiw2QkFBNkI7SUFDN0JULGdEQUFTQSxDQUFDO1FBQ1IsSUFBSSxDQUFDUyx1QkFBdUI7UUFFNUIsTUFBTWlCLHdCQUF3QixDQUFDWDtZQUM3QixJQUFJQSxTQUFTRyxNQUFNLEtBQUssR0FBRztnQkFDekJLO1lBQ0YsT0FBTztnQkFDTG5CLGVBQWVVLENBQUFBLE9BQVM7d0JBQ3RCLEdBQUdBLElBQUk7d0JBQ1BULGFBQWE7d0JBQ2JDLFNBQVNTLFFBQVEsQ0FBQyxFQUFFO3dCQUNwQlAsT0FBTztvQkFDVDtZQUNGO1FBQ0Y7UUFFQUUsT0FBT0MsUUFBUSxDQUFFZ0IsRUFBRSxDQUFDLG1CQUFtQkQ7UUFFdkMsT0FBTztZQUNMaEIsT0FBT0MsUUFBUSxDQUFFaUIsY0FBYyxDQUFDLG1CQUFtQkY7UUFDckQ7SUFDRixHQUFHO1FBQUNqQjtRQUFxQmM7S0FBaUI7SUFFMUMsT0FBTztRQUNMLEdBQUdwQixXQUFXO1FBQ2RVO1FBQ0FVO1FBQ0FkLHFCQUFxQkE7SUFDdkI7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9ob29rcy91c2VXYWxsZXQudHM/MjE3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgV2FsbGV0U3RhdGUsIE1ldGFNYXNrRXJyb3IgfSBmcm9tICdAL3R5cGVzL3dhbGxldCc7XG5cbmV4cG9ydCBjb25zdCB1c2VXYWxsZXQgPSAoKSA9PiB7XG4gIGNvbnN0IFt3YWxsZXRTdGF0ZSwgc2V0V2FsbGV0U3RhdGVdID0gdXNlU3RhdGU8V2FsbGV0U3RhdGU+KHtcbiAgICBpc0Nvbm5lY3RlZDogZmFsc2UsXG4gICAgYWRkcmVzczogbnVsbCxcbiAgICBpc0Nvbm5lY3Rpbmc6IGZhbHNlLFxuICAgIGVycm9yOiBudWxsLFxuICB9KTtcblxuICAvLyBDaGVjayBpZiBNZXRhTWFzayBpcyBpbnN0YWxsZWRcbiAgY29uc3QgaXNNZXRhTWFza0luc3RhbGxlZCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmV0aGVyZXVtPy5pc01ldGFNYXNrO1xuICB9LCBbXSk7XG5cbiAgLy8gQ29ubmVjdCB0byBNZXRhTWFza1xuICBjb25zdCBjb25uZWN0V2FsbGV0ID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGlmICghaXNNZXRhTWFza0luc3RhbGxlZCgpKSB7XG4gICAgICBzZXRXYWxsZXRTdGF0ZShwcmV2ID0+ICh7XG4gICAgICAgIC4uLnByZXYsXG4gICAgICAgIGVycm9yOiAnTWV0YU1hc2sgaXMgbm90IGluc3RhbGxlZC4gUGxlYXNlIGluc3RhbGwgTWV0YU1hc2sgdG8gY29udGludWUuJyxcbiAgICAgIH0pKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZXRXYWxsZXRTdGF0ZShwcmV2ID0+ICh7XG4gICAgICAuLi5wcmV2LFxuICAgICAgaXNDb25uZWN0aW5nOiB0cnVlLFxuICAgICAgZXJyb3I6IG51bGwsXG4gICAgfSkpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgd2luZG93LmV0aGVyZXVtIS5yZXF1ZXN0KHtcbiAgICAgICAgbWV0aG9kOiAnZXRoX3JlcXVlc3RBY2NvdW50cycsXG4gICAgICB9KTtcblxuICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgc2V0V2FsbGV0U3RhdGUocHJldiA9PiAoe1xuICAgICAgICAgIC4uLnByZXYsXG4gICAgICAgICAgaXNDb25uZWN0ZWQ6IHRydWUsXG4gICAgICAgICAgYWRkcmVzczogYWNjb3VudHNbMF0sXG4gICAgICAgICAgaXNDb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgfSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0V2FsbGV0U3RhdGUocHJldiA9PiAoe1xuICAgICAgICAgIC4uLnByZXYsXG4gICAgICAgICAgaXNDb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgICBlcnJvcjogJ05vIGFjY291bnRzIGZvdW5kLiBQbGVhc2UgbWFrZSBzdXJlIHlvdXIgd2FsbGV0IGlzIHVubG9ja2VkIGFuZCBoYXMgYXQgbGVhc3Qgb25lIGFjY291bnQuJyxcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zdCBtZXRhbWFza0Vycm9yID0gZXJyb3IgYXMgTWV0YU1hc2tFcnJvcjtcbiAgICAgIGxldCBlcnJvck1lc3NhZ2UgPSAnRmFpbGVkIHRvIGNvbm5lY3QgdG8gTWV0YU1hc2snO1xuICAgICAgXG4gICAgICBpZiAobWV0YW1hc2tFcnJvci5jb2RlID09PSA0MDAxKSB7XG4gICAgICAgIGVycm9yTWVzc2FnZSA9ICdDb25uZWN0aW9uIHJlamVjdGVkIGJ5IHVzZXInO1xuICAgICAgfSBlbHNlIGlmIChtZXRhbWFza0Vycm9yLmNvZGUgPT09IC0zMjAwMikge1xuICAgICAgICBlcnJvck1lc3NhZ2UgPSAnQ29ubmVjdGlvbiByZXF1ZXN0IGFscmVhZHkgcGVuZGluZy4gUGxlYXNlIGNoZWNrIE1ldGFNYXNrLic7XG4gICAgICB9IGVsc2UgaWYgKG1ldGFtYXNrRXJyb3IubWVzc2FnZSkge1xuICAgICAgICBlcnJvck1lc3NhZ2UgPSBtZXRhbWFza0Vycm9yLm1lc3NhZ2U7XG4gICAgICB9XG5cbiAgICAgIHNldFdhbGxldFN0YXRlKHByZXYgPT4gKHtcbiAgICAgICAgLi4ucHJldixcbiAgICAgICAgaXNDb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IGVycm9yTWVzc2FnZSxcbiAgICAgIH0pKTtcbiAgICB9XG4gIH0sIFtpc01ldGFNYXNrSW5zdGFsbGVkXSk7XG5cbiAgLy8gRGlzY29ubmVjdCB3YWxsZXRcbiAgY29uc3QgZGlzY29ubmVjdFdhbGxldCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRXYWxsZXRTdGF0ZSh7XG4gICAgICBpc0Nvbm5lY3RlZDogZmFsc2UsXG4gICAgICBhZGRyZXNzOiBudWxsLFxuICAgICAgaXNDb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgIGVycm9yOiBudWxsLFxuICAgIH0pO1xuICB9LCBbXSk7XG5cbiAgLy8gQ2hlY2sgaWYgYWxyZWFkeSBjb25uZWN0ZWQgb24gbW91bnRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjaGVja0Nvbm5lY3Rpb24gPSBhc3luYyAoKSA9PiB7XG4gICAgICBpZiAoIWlzTWV0YU1hc2tJbnN0YWxsZWQoKSkgcmV0dXJuO1xuXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdpbmRvdy5ldGhlcmV1bSEucmVxdWVzdCh7XG4gICAgICAgICAgbWV0aG9kOiAnZXRoX2FjY291bnRzJyxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzZXRXYWxsZXRTdGF0ZShwcmV2ID0+ICh7XG4gICAgICAgICAgICAuLi5wcmV2LFxuICAgICAgICAgICAgaXNDb25uZWN0ZWQ6IHRydWUsXG4gICAgICAgICAgICBhZGRyZXNzOiBhY2NvdW50c1swXSxcbiAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNoZWNraW5nIHdhbGxldCBjb25uZWN0aW9uOicsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY2hlY2tDb25uZWN0aW9uKCk7XG4gIH0sIFtpc01ldGFNYXNrSW5zdGFsbGVkXSk7XG5cbiAgLy8gTGlzdGVuIGZvciBhY2NvdW50IGNoYW5nZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWlzTWV0YU1hc2tJbnN0YWxsZWQoKSkgcmV0dXJuO1xuXG4gICAgY29uc3QgaGFuZGxlQWNjb3VudHNDaGFuZ2VkID0gKGFjY291bnRzOiBzdHJpbmdbXSkgPT4ge1xuICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBkaXNjb25uZWN0V2FsbGV0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRXYWxsZXRTdGF0ZShwcmV2ID0+ICh7XG4gICAgICAgICAgLi4ucHJldixcbiAgICAgICAgICBpc0Nvbm5lY3RlZDogdHJ1ZSxcbiAgICAgICAgICBhZGRyZXNzOiBhY2NvdW50c1swXSxcbiAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB3aW5kb3cuZXRoZXJldW0hLm9uKCdhY2NvdW50c0NoYW5nZWQnLCBoYW5kbGVBY2NvdW50c0NoYW5nZWQpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5ldGhlcmV1bSEucmVtb3ZlTGlzdGVuZXIoJ2FjY291bnRzQ2hhbmdlZCcsIGhhbmRsZUFjY291bnRzQ2hhbmdlZCk7XG4gICAgfTtcbiAgfSwgW2lzTWV0YU1hc2tJbnN0YWxsZWQsIGRpc2Nvbm5lY3RXYWxsZXRdKTtcblxuICByZXR1cm4ge1xuICAgIC4uLndhbGxldFN0YXRlLFxuICAgIGNvbm5lY3RXYWxsZXQsXG4gICAgZGlzY29ubmVjdFdhbGxldCxcbiAgICBpc01ldGFNYXNrSW5zdGFsbGVkOiBpc01ldGFNYXNrSW5zdGFsbGVkKCksXG4gIH07XG59OyJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUNhbGxiYWNrIiwidXNlV2FsbGV0Iiwid2FsbGV0U3RhdGUiLCJzZXRXYWxsZXRTdGF0ZSIsImlzQ29ubmVjdGVkIiwiYWRkcmVzcyIsImlzQ29ubmVjdGluZyIsImVycm9yIiwiaXNNZXRhTWFza0luc3RhbGxlZCIsIndpbmRvdyIsImV0aGVyZXVtIiwiaXNNZXRhTWFzayIsImNvbm5lY3RXYWxsZXQiLCJwcmV2IiwiYWNjb3VudHMiLCJyZXF1ZXN0IiwibWV0aG9kIiwibGVuZ3RoIiwibWV0YW1hc2tFcnJvciIsImVycm9yTWVzc2FnZSIsImNvZGUiLCJtZXNzYWdlIiwiZGlzY29ubmVjdFdhbGxldCIsImNoZWNrQ29ubmVjdGlvbiIsImNvbnNvbGUiLCJoYW5kbGVBY2NvdW50c0NoYW5nZWQiLCJvbiIsInJlbW92ZUxpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useWallet.ts\n"));

/***/ })

});